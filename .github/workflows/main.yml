# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Tests

on:
  push:
    branches: [ stable-dev ]
  pull_request:
    branches: [ stable-dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test-arjdbc-pgsql:

    name: ARJDBC Tests (Postgres)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby-version: ['jruby-head']
        db: ['postgresql']
        test_targets: ["db:postgresql test_postgresql"]
        prepared_statements: ['false', 'true']
        insert_returning: ['false', 'true']

    services:
      postgres:
        image: postgres:10
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      DB: ${{ matrix.db }}
      DRIVER: ${{ matrix.driver }}
      JRUBY_OPTS: "-J-Xms64M -J-Xmx1024M"
      PREPARED_STATEMENTS: ${{ matrix.prepared_statements }}
      INSERT_RETURNING: ${{ matrix.insert_returning }}
      PGHOST: localhost
      PGPORT: 5432
      PGUSER: postgres

    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Build
        run: |
          rake jar
      - name: Run tests
        run: |
          bundle exec rake ${{ matrix.test_targets }}
